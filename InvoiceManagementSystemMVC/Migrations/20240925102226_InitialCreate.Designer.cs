// <auto-generated />
using System;
using InvoiceManagementSystemMVC.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceManagementSystemMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925102226_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentId"));

                    b.Property<short?>("ApartmentTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Block")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApartmentId");

                    b.HasIndex("ApartmentTypeId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.ApartmentType", b =>
                {
                    b.Property<short>("ATypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ATypeId"));

                    b.Property<string>("ApartmentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ATypeId");

                    b.ToTable("ApartmentTypes");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<long?>("BillPayment")
                        .HasColumnType("bigint");

                    b.Property<int?>("BillType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("BillId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("BillType");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.BillType", b =>
                {
                    b.Property<int>("BTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BTypeId"));

                    b.Property<string>("BillTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BTypeId");

                    b.ToTable("BillTypes");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.UserAdmin", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Role")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserAdmins");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.Apartment", b =>
                {
                    b.HasOne("InvoiceManagementSystemMVC.Entities.ApartmentType", "ApartmentTypeNavigation")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartmentTypeId")
                        .HasConstraintName("FK_Apartment_ApartmentType");

                    b.HasOne("InvoiceManagementSystemMVC.Entities.UserAdmin", "UserAdmin")
                        .WithOne("Apartment")
                        .HasForeignKey("InvoiceManagementSystemMVC.Entities.Apartment", "UserId")
                        .HasConstraintName("FK_Apartment_UserAdmin");

                    b.Navigation("ApartmentTypeNavigation");

                    b.Navigation("UserAdmin");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.Bill", b =>
                {
                    b.HasOne("InvoiceManagementSystemMVC.Entities.Apartment", "Apartment")
                        .WithMany("Bills")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK_Bill_Apartment");

                    b.HasOne("InvoiceManagementSystemMVC.Entities.BillType", "BillTypeN")
                        .WithMany("Bills")
                        .HasForeignKey("BillType")
                        .HasConstraintName("FK_Bill_BillType");

                    b.Navigation("Apartment");

                    b.Navigation("BillTypeN");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.Apartment", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.ApartmentType", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.BillType", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("InvoiceManagementSystemMVC.Entities.UserAdmin", b =>
                {
                    b.Navigation("Apartment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
